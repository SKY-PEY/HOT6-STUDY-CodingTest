/*
Greedy (탐욕 알고리즘)
  - 탐욕 알고리즘은 본래 "근사해"를 구하는 목적으로 사용되곤 함
  - 하지만, 코딩테스트에서의 탐욕 알고리즘 유형은, 탐욕 방법으로 최적의 해가 보장되는 문제가 출제됨

탐욕 알고리즘 접근 방법
  1. 방법 고안하기: 현재 상황에서 어떤 것을 선택할지 알고리즘을 고안한다.
  2. 정당성 확인하기: 자신이 고안한 알고리즘이 항상 최적의 해를 보장하는지 확인한다. (증명 단계)

[ 거스름 돈 문제 ]
  - 거스름 돈 문제는 전형적인 탐욕 알고리즘의 예시다.
  - 카운터에 500원, 100원, 50원, 10원짜리 동전이 무수히 많이 존재한다.
  - 손님에게 6,480원을 거슬러 주어야 할 때, 동전 개수의 최솟값은?

  - 이 문제의 해결 방법은, 가장 큰 화폐 단위부터 거슬러주는 것이다.
  - 따라서, 다음의 4단계를 거쳐 정답을 도출할 수 있다.
  1. 500원으로 거슬러 줄 수 있는 만큼 거슬러 준다. (12개 = 6000원)
  2. 100원으로 거슬러 줄 수 있는 만큼 거슬러 준다. (4개 = 400원)
  3. 50원으로 거슬러 줄 수 있는 만큼 거슬러 준다. (1개 = 50원)
  4. 10원으로 거슬러 줄 수 있는 만큼 거슬러 준다. (3개 = 30원)

  => 동전 최소 20개 필요한 해답 도출 가능

  하지만, 위 문제에서의 해답은 각 화폐 단위가 배수 관계에 속하기 때문에 가능한 해답이다.
  만약 120원을 거슬러 주어야 할 때, 화폐가 80원, 60원, 10원으로 존재한다면, 60원 x 2 = 120원이 최적해 일 것이다.
  80원부터 거슬러 준다면, 총 5개의 동전이 필요하게 되기 때문에, 위 화폐 배수 관계에서의 해답과 방법이 달라진다.
  따라서 방법을 고안한 후에는 정당성을 확인하여야 한다.
*/
